

############################################################################################################################
TO-DO NOTES
############################################################################################################################


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
NEXT SCHEDULED WORK SESSION (DEBUGGING AND / OR INFRASTRUCTURE)
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


Style the new Help / FAQ page, including correct highlighting of FAQ titles when clicked on.


Test in desktop editions.


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
GENERAL REMINDERS
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


Always set bluefish to "5 spaces" as a tab indentation, and enabling indentation of selected text. THE AMOUNT OF INDENTED SPACING IN FILES #CHANGES AUTOMATICALLY# WHEN "BLUEFISH => PREFERENCES => INITIAL DOCUMENT SETTINGS => TAB WIDTH" IS CHANGED, SO BE CAREFUL WHEN ADJUSTING!!


Try to prioritize building the admin interface / mobile templates / language translation modules. Then it's the most useful for the maximum number of people as it can be going forward.


Ocassionally re-run the debug mode that prints out all the btc / crypto exchanges and base pairs, and update the docs (project page / README / config file / etc).


Post on hive, telegram, discord, Twitter, Facebook (and r/CryptoMarkets and r/CryptoCurrency on MAJOR RELEASES) whenever there is a new release of the app.



Youtube channels on the resources page, that MAY BE DYING (keep an eye on them): (none right now)


Keep github price chart bootstrap download updated weekly if not daily!


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
API INTEGRATION 
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


https://aptos.dev/nodes/aptos-deployments/
https://fullnode.devnet.aptoslabs.com/v1/spec#/


For transaction fees plugin (the solana data):
https://public-api.solscan.io/transaction/last


Jupiter Aggregator (Solana DEXs)
https://price.jup.ag/v1/price?id=SOL&vsToken=USDC
https://docs.jup.ag/jupiter-api/jupiter-price-api-beta


https://docs.solana.com/cluster/rpc-endpoints
https://docs.solana.com/developing/clients/jsonrpc-api#getbalance


Look into adding Google Sheets API support for portfolio import / export: https://developers.google.com/sheets/api/samples/reading


Look into adding https://1inch.exchange/#/ to DeFi APIs.


Add BTSE API: https://api.btse.com/spot/api/v3.2/market_summary


Add bithumb API


Check out cryptocompare.com API.


Add localcryptos API support whenever their API is out of private testing.


Build tool that finds localbitcoins markets not added yet


Add clicksend.com mobile text messaging support


https://zksync.io/api/v0.1.html (KEEP AN EYE OUT FOR V2 DOCS AS WELL)


// https://core.telegram.org/bots/api

// https://core.telegram.org/bots/api#making-requests

// https://api.telegram.org/bot{my_bot_token}/setWebhook?url={url_to_send_updates_to}

// https://api.telegram.org/bot{my_bot_token}/deleteWebhook

// https://api.telegram.org/bot{my_bot_token}/getWebhookInfo


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
DEBUGGING / TESTS / UX / QA / OTHER
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!   D O N T   F O R G E T   T O   S Q U A S H   T H E   B U G S !   !!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
     ((((c,               ,7))))
    (((((((              ))))))))
     (((((((            ))))))))
      ((((((@@@@@@@@@@@))))))))
       @@@@@@@@@@@@@@@@)))))))
    @@@@@@@@@@@@@@@@@@))))))@@@@
   @@/,:::,\/,:::,\@@@@@@@@@@@@@@    
   @@|:::::||:::::|@@@@@@@@@@@@@@@
   @@\':::'/\':::'/@@@@@@@@@@@@@@
    @@@@@@@@@@@@@@@@@@@@@@@@@@@
      @@@@@@@@@@@@@@@@@@@@@@\
         /    \        (     \
        (      )        \     \
         \    /          \        
----------------------------------------------------------------------
(CREDIT: https://asciiart.website/index.php?art=animals/insects/other)
----------------------------------------------------------------------
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!                                                                                    
===> WHEN DEBUGGING / TESTING PHP, LEAVE "$dev_debug_php_errors" IN "app-lib/php/init.php" SET
===> LIKE SO, TO ALWAYS LOG ALL PARSE / FATAL PHP ERRORS DURING TESTING: (E_ERROR | E_PARSE)
!!!!
===> Set PHP-CLI (for cron) "/etc/php/X.X/cli/php.ini": error_log = /var/log/php_errors.log
===> (run: "sudo touch /var/log/php_errors.log" / "sudo chmod 666 /var/log/php_errors.log")
!!!!
===> Desktop Editions log all PHP errors to: /INSTALL_CRYPTO_TRACKER_HERE/php_errors.log
!!!!
===> Server Edition (on debian) logs Apache PHP errors to: /var/log/apache2/error.log
!!!!
===> See top of the file "/app-lib/js/var_defaults.js", for notes on declaring global / local
===> variables inside javascript-based app logic IN A PROPER MANNER.
!!!!
===> config.php (and plug-conf.php for plugins) MUST ONLY CONTAIN STATIC CONFIGS,
===> as all configs are saved to / run from cache file: /cache/secured/ct_conf_XXXXXXXXX.dat
!!!!                                                                                    
===> May come in handy for writing PHP unit tests (in /app-lib/php/inline/debugging/):
===> https://stackoverflow.com/questions/861254/iterate-over-properties-of-a-php-class
!!!!
===> Use SQLite for data storage that needs query capability (PHPdesktop supports SQLite).
!!!!                    
===> JS / CSS map file loading will timeout, if you load too many charts / news feeds.
!!!!
===> Test in a WebKit-based browser [Epiphany|Safari|Midori], and Firefox / Chromium.
!!!!
===> Think over what other "FAQ page / TROUBLESHOOTING.txt" entries would be helpful.
!!!!
===> Try to do tests / UX / QA / debugging before adding new infrastructure
===> (find every flaming turd before we start a dumpster fire!).
!!!!
===> Try to break up larger changes into smaller milestones,
===> then plenty of time is spent on UX / testing / debugging.
!!!!
===> Don't require any higher than PHP v7.2 until PHP v9.
!!!!                                                            
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


Make the app look a bit nicer in firefox if possible (WITHOUT FF-specific code).


Change semantic naming of 'coin_amnts' form id, as it now also handles charts / news feeds / etc.


Change the last option in the ext_data() function to a human-readable value, to save time on new API integrations (url_encode, json_encode, etc).


Look for "0.0000" in app, for more instances we need to now be dynamic in the logic (base off new min decimal settings in the general section of the config).


Try copy / paste bonk inu "unit value" from portfolio page over to "paid" field on update page, to try to recreate a possible issue related to invisible whitespace causing "paid" value to set as zero on form submission.


Make sure everything STILL runs smoothly with the charts page turned off.


Test turning htaccess password protection on/off on the interface, I messed with it BUT changed it back.


Change "portfolio cache size gigabytes" system chart telemetry name to "tracker cache size gigabytes".


In firefox, there is A TON of margin / padding in each portfolio data row's data cells. Reduce it to match chrome.


Remove all linebreaks in javascript alert / confirm dialogue boxes, except for new paragraphs. Let the browser choose the max width on it's own (like they do nowadays)


Look into doing bootstrap modals instead of the current library we use. Maybe it's better?


Setup XAMPP on Win10 on the DVR server, and run server edition of tracker on it for a week with PHP debug logging on.


Write notes in TODO.txt debugging section, on setting up / viewing PHP error logging in XAMPP on Windows.


Remove all forced line breaks in FOLIO-INSTALL.bash dialogue


New FAQ entry "my text alerts aren't working, or are delayed"


The Bitmex U20 / Z20 markets are not marked as a 'limited api' IN THE INTERFACE SETTINGS PAGE, UNDER 'PRIMARY CURRENCY MARKET'.


Update Portfolio page screenshots, since we added the 'Rank' column AND REBRANDED app name.


Add more checks / auto-corrects to config-auto-adjust.php (we've added alot more config settings since it's creation)


Code review ENTIRE INIT / CONFIG RUNTIME SECTION, and cleanup / optimize where needed


Overhaul / optimize config checks.


Add remote IP address data to ALL relevant security error logging everywhere in the app.


$ct_conf = $ct_cache->refresh_cached_ct_conf($ct_conf, true); at the end of load-config-by-security-level.php is throwing this error (so it's commented-out for now):
[2022-08-03 03:30:40] ui => conf: updated ct_conf data could not be saved (to secured cache storage) in json format;  
[2022-08-03 03:30:40] ui => conf: ct_conf data could not be restored from last-known working config; 


Make all coin configs (assets and price alerts / charts) CASE-INSENSITIVE. Most efficient way to do this would be by auto-correcting in other/config/config-auto-adjust.php, to be the correct case even if a user editing config.php used the wrong case.


Move the error log alerts for "email not configured" under the new "notify" category (which avoids duplicate messages).


Add power failure corruption checks (like chart price data has), to system charts and price alerts file cache data.


Purge stale data in cookies / post submission with coin portfolio data, in runtime-type-init.php (if the coin market no longer is in the config, like we already do there for feeds / charts)


Write unit tests to check all apis and news feed endpoints, to see if they still exist (put in /php/inline/debugging/tests.php). Have news feed test look for specific news feed xml format, kinda like it does in ext_data(), but more specific (title or links etc). If none exists, flag news feed as offline.


Look into using docker images for cross-platform compatibility (Windows / Mac / Linux).


Find out why days has 2 decimals RANDOMLY IN TEXT MESSAGES (text notify, email and telegram are fine):
"SHDW / BTC @ Generic BTC decreased -9.27% in USD value to $0.68269 over 1..04 days. 24 Hour USD Volume: $1,064,959 (-1.54% pair volume)"


When importing a CSV spreadsheet in linux desktop edition with cookies enabled, UNLESS we manually save the portflio data on the update page AFTER importing, the portfolio data is lost when we close the app. See if this also affects windows desktop edition, and server edition.


"CSV import suceeded" has a 'dismiss' link that doesn't work...when clicked, it reloads a blank portfolio page. But when the normal 'refresh' link is used INSTEAD atop the portfolio page, the imported data stays just fine. Funny thing is the "CSV import suceeded" message ALSO PERSISTS THIS WAY. Figure out whats going on there. Also check the "Your CSV import upload failed." logic. Start tests with Windows Desktop Edition.


Cross-browser test RTL (right to left) effects from middle eastern currency symbols being injected into the interface output for those currencies


Investigate / report to PHP devs (IF IT'S NOT A FILE READ ISSUE) the .htaccess password bug (/classes/core/cache.php, line 189) issue on Windows 10 / XAMPP 3.3.0 / PHP 7.4.24: $htaccess_password = crypt( $htaccess_password, base64_encode($htaccess_password) );


Look into laptop touchscreen zingchart js error on Ubuntu 20.04 / Chrome, when hiding / showing assets in performance chart (but is fine on Ubuntu 20.04 / Chrome on desktop). IT DOESN'T SEEM TO BE MY CODE, SO REPORT IT TO THE ZINGCHART TEAM.


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
FEATURES / NEW INFRASTRUCTURE / RESEARCH
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


Convert Arch linux support in auto-installer over to redhat (yum), as Arch does NOT have much package / setup support for libraries we use. WE ALREADY CONVERTED "BUILD-PHP-FOR-LINUX-DESKTOP.bash" OVER TO BE REDHAT COMPATIBLE, so use it as a template to integrate into FOLIO-INSTALL.bash. ALSO REMOVE ARCH DOCUMENTATION AND REPLACE WITH FEDORA DOCS.


Integrate google authenticator / microsoft authenticator / authy / etc BEING REQUIRED TO CHANGE THE ADMIN SECURITY LEVEL FROM HIGH TO A LOWER LEVEL (and also make it OPTIONAL for login security):

https://www.google.com/search?q=php+one+time+password+google+authenticator

https://www.rafaelwendel.com/en/2021/05/two-step-verification-with-php-and-google-authenticator/

https://github.com/sonata-project/GoogleAuthenticator

https://stackoverflow.com/questions/tagged/sonata


On smaller screens (mobile etc), the COMPACT sidebar should be transformed into a top bar (horizontal across top, instead of vertical down the side, with DROP-downs OR SLIDE-downs for secondary submenus [like my biz site on mobile...whichever has a better 'feel']). Have each menu category be an icon that when clicked does a drop-down menu below it, THAT IS THE ENTIRE WIDTH OF THE SCREEN. Skip supporting 3-deep subnav here, unless we can make it work using the entire screen width for 2-deep subnav entries (for small screen tapping UX / less confusion). When each main drop-down is clicked, any other main drop-down should close automatically.


The BITdao token will be switching it's name / ticker symbol to mantle / MNT.


Remove localbitcoins support (they are closing shop).


Add Bitcoin NFT support.


Move remaining font-size / line-height logic in style.css AND ELSEWHERE into our dynamic CSS header logic.


Add feature to address balance tracker plugin to set minimum time to wait before re-sending the same address alert (in hours). Default it to a high number like 8 hours, so any shitty API servers don't send endless alerts as they send bs results (like helium network API).


MIGRATION TO BOOTSTRAP V5:

https://getbootstrap.com/docs/5.0/migration/


SEE PUBLIC DEMO FOR GUIDANCE ON MIGRATING A FEW ITEMS BELOW (AS WE ARE NOT UPDATING THE PUBLIC DEMO UNTIL WE COMPLETE THE TEMPLATE OVERHAUL)!


Migrate our custom FAQ page styling (backgounds / text colors) to be bootstrap-v5-compatible (since we just upgraded to bootstrap v5)


Migrate our custom select/option menu styling (rounded corners / custom drop-down arrow) to be bootstrap-v5-compatible (since we just upgraded to bootstrap v5)


Some NON-HEADING-SIZE text MAY NOT RESIZE EVEN AFTER COMPLETING THE TASKS DIRECTLY ABOVE THIS ONE, find out why. THIS OLD CODE BELOW MAY COME IN HANDY FOR DEBUGGING THAT:

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
html, p, td.data, td.data span.data, td select, td.data span, input, select, textarea, input[type=submit], input[type=button], .force_button_style, .btn-link, .btn-link a, .btn-link:hover {	
font-family: sans-serif !important;
font-size: 15px !important;
}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


The tags 'h1' through 'h6' should be made to user-adjust text size too (could be a bit tricky, be careful).


Add to resources page: 

https://solana.sec3.dev/

https://solana.fm/

https://squads.so/

https://stakewiz.com/

https://solanacompass.com/

https://analytics.step.finance/


Add to news feeds:

https://stepdata.substack.com/


Add OPTIONAL Coingecko PRO API support: https://apiguide.coingecko.com/exclusive-endpoints/pro-api


All NON-GLOBAL variables inside JAVASCRIPT functions should be started as 'var my_var_name': 

https://stackoverflow.com/questions/10872006/how-do-i-change-the-value-of-a-global-variable-inside-of-a-function/10874509#10874509


Cleanup non-existant ids / classes in stylesheets, AFTER converting the templates to a responsive layout.


The 3 sections in each portfolio data row (asset, market, holdings) should each break onto a newline as screen width decreases, that is to say each entire section should remain wholly on one line, at least until very tiny scren sizes.


Add new plugin standard config 'ui_display_mode':

$plug_conf[$this_plug]['ui_display_mode'] = 'inline'; // 'inline', 'modal_iframe'

'modal_iframe' still only displays in 'more_stats' / 'tools' sections (like 'inline' already does), BUT as a link that opens a FULL SCREEN modal window (like our 'quick links' already do), AND runs inside a FULL WIDTH / AUTO-ADJUSTING HEIGHT iframe (like the admin sections)

Defaults to 'inline' if not set.


Add new plugin standard config 'admin_page_width':

$plug_conf[$this_plug]['admin_page_width'] = 'standard'; // 'standard', 'full'

'full' makes the plugin's admin page full width (like we do for app logs / system stats admin pages already).

Defaults to 'standard' if not set.


Document the ABOVE new plugin settings, and fully test before public release.


Build a plugin (for the tools page, defaults to activated already), that lets you quickly calculate unlimited nft values (using text field form library used for debt interest tracker) in sol or eth value from any currency (including sol or eth, like miscassets market field), with option to populate ethnfts / solnfts portfolio fields on update page, and save updates to them.


Remove the requirement for a secondary crypto market needing a BTC market, by allowing a secondary crypto market if it at least has a pairing that is the same as one of Bitcoin's pairings (like USD). Then have the BTC pairing value function look for that if there is no BTC market for the asset. Within the BTC pairing function, all we then need to do is multiply this backup conversion pairing value by the last trade value of the secondary crypto market (with a recursive call in the function to get say for instance the BTC/USD trade value). Also include a new config setting "pref_backup_conversion_pair", so when we check what pairings the asset has available, we use this pairing first (like USD).


Add https://www.reddit.com/r/StarAtlas/ to resources page / news feeds.


Add more Jupiter agg markets to Solana coins in demo config, and in price target plugin.


Add openserum markets support.


Research whether POST data size affects header size like cookie data size does.


Change the 'eth_erc20_icos' => 'ico_erc20_value' config settings to 'token_presales' => 'presale_value', AND support any base pair as the pairing (NOT just 'ETH').


Look into Aptos support for the 'address-balance-tracker' plugin (see the API notes section for public endpoints REST API docs).


Add additional ability to do telegram / discord webhooks in the new "crypto-info-bot" plugin, to query asset prices at different exchanges through telegram chat with the chat bot. Example: "/price btc-usd-coinbase"


Convert all javascript functions into classes, for cleaner code:
https://javascript.info/class


Enable the app config upgrade logic (for enhanced / normal admin sec modes, already built, just enable / test it). SEE DEBUGGING SECTION, AS WE NEED TO FIX IT BEFORE ENABLING IT.


Consider bundling all the TODO charts we want to add to the "more stats" page (arbitrage etc) into a "addon-chart-stats" plugin (UI name "Additional Chart Stats"). This will help to flesh out the plugin system, and give insight into any additional requirements that should be added to it.


Look into adding temp monitoring support for systems other than linux devices: https://phoenixnap.com/kb/linux-cpu-temp


Create github wiki with the current documentation for the portfolio app.


To avoid having the "re-enter /start" telegram error message unless truly needed, take an md5 digest of all telegram settings concatenated together, and save as a var in the vars cache folder. Only run a telegram setting update if this md5 digest ever changes.


Auto-update feature like WordPress has (downloads a zip file upgrade from github, and exctracts it overwriting the old app files).


Option to use new zip file encryption password feature to encrypt portfolio spreadsheet exports when downloading exported portfolio data (with password entered in the UI, #NOT# $ct_conf['sec']['backup_arch_pass']).


Create "Export your feeds" link on News page, to XML / JSON format file download (that can import into news readers), ONLY AVAILABLE IF ADMIN-LOGGED-IN (FOR SECURITY IF ANY FEDS ARE PRIVATE).


Add 'cancel' button on privacy mode PIN modal, and adjust the background color / border color / border width to 'pop out' better in the light / dark themes.


Add same logic we have for internal API request throttling to the admin login / reset attempts, make setting configurable.


Add a dedicated system chart file for plugin cron stats ONLY (runtime seconds, etc).


Add ability to choose what decimal and thousands seperators to use.


Add force reset logic for app config, if cached app version number is non-existent or below a certain version, so we force a complete reset for non-backwards-compatible upgrades.


HUGE 'TONS OF COOKIE DATA' ISSUE ON SERVERS ALREADY RUNNING #OTHER# WEB APPS (LIKE WORDPRESS) #AT THE SAME TIME / ON SAME DOMAIN# (AS IT CAN GO OVER THE SERVER HEADER LIMIT AND CRASH THE WEB APP LOADING BOTH APP'S COOKIES INTO THE HEADER): Since we already wait for the page to load for initiating batch-grabbing news feeds(?), maybe we can store the user-selected feeds in local storage, since the data set is potentially VERY large (to save alot on cookie header data)? Look over the batch loading logic, and see if we can do it more with JavaScript instead of PHP (except for the ajax calls to the server AFTER we know what was user-chosen). Same should generally go for price charts (as we ALSO load after the page has loaded), so look into that too.


For the in-development 'on-chain-stats' plugin:
Have it display on the 'more stats' page
Use the 'usd asset comparision' chart template...different chains are in place of the assets, the telemetry items in place of the time period options.


On 'more stats' page, have a 'market comparison stats' chart for arbitrage on one asset (picked from dropdown menu), with default showing All pair's markets, with USD conversion. Make it a bar chart, based off the marketcap chart template. Have 3 drop-down menus: Asset, Pair (with an All option), Primary Currency (conversion). Looping through asset pairs / markets should be a straight forward algo that does the job.


On 'more stats' page, add a 'market volume' chart, showing a multi-line chart (like asset comparison chart) of all [charts-fiat-conversion-currency] volumes for an asset's configured markets THAT HAVE CHARTS ENABLED (so we grab values from light chart data). Default to showing Bitcoin, allow using different light chart time periods (like asset comparison chart).


Add market stats summaries from chart data, like bar charts for exchange volume on certain assets / pairs (on 'view more stats' page).


Fully include all leverage in all portfolio summaries, with "(X% leverage)" next to each summary.


Do a gains / losses bar chart for the gains / losses summary (tooltip, like balance stats chart).


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


ADMIN IFRAME SUBSECTIONS BUILDOUT NOTES:


-TODO: Should have CSS position set as 'sticky' for the 'Save' button (like reload countdown on secondary user tabs)

-TODO: Onblur of iframe (clicking another tab, etc) should pause click actions and warn IF CHANGES HAVE BEEN MADE TO SETTINGS WITHIN THE IFRAME

-TODO: ADD A 'REVERT TO LAST-KNOWN WORKING CONFIG' OPTION SOMEWHERE, IN CASE THE END-USER WANTS / NEEDS TO REVERT TO LAST KNOWN WORKING CONFIG (ALREADY SAVED AS "restore_conf" in secured cache folder)

-TODO: "Build the HTML rendering CONFIGs for each admin config setting's fields" SHOULD NOT BE USED (AS ORIGINALLY THOUGHT), RENDER FIELDS STATICALLY INSTEAD, AS IT AVOIDS OVER-COMPLICATING THE REQUIRED CUSTOMIZATION NEEDED PER-SETTING (INCLUDING ERROR CHECKS BEFORE SUBMISSION)
 
-TODO: Use bootstrap's built-in alert closeable pop-in to indicate 'configuration saved' inside each admin iframe.


OTHER ADMIN BUILDOUT NOTES:


For admin area pages / sections, consider doing subsections in a modal subwindow (like we do for "select charts" on the user area charts page), with iframes for loading through 'wizard' steps or opening different categories. It would possibly keep a native app 'feel' while also reducing admin page load times. Think it over, figure out the best solution here for a great UX.


On admin "assets" page, add a button atop the page called " Add New Asset Or Market". Then, on page 1 of the 'add asset' wizard (multi-step on separate modal pages), only have the radio selection choices (only one can be selected): 'Add new asset' and 'Add new market to existing asset'. 


The upcoming 'add new asset market' admin interface feature should be a "wizard" with a few "steps", to have a decent user experience AND break the logic up into different checks / steps under the hood as well. 1) Asset name and symbol, 2) Choose from a list of exchanges and pairs available for that asset, 3) Enable charts and or alerts for different exchanges and pairs.


On admin config tabs, add logic to have onchange update a tracking value FOR THAT TAB ONLY, so if a user changes a setting and DOESN'T SAVE IT AND CLICKS ANOTHER SECTION / TAB / LINK they get an alert to confirm leaving the tab without saving their changes. Include on exiting admin config area (returning to portfolio page / closing tab).


Admin import / export of settings (consider security implications CAREFULLY...include an optional / mandatory checkbox to encrypt to zip file with our new zip encryption feature).


Add admin settings feature to restore chart data from the zip archive backups (with admin authentication ONLY).


Create help page modal for explanations on all config.php settings, that we can link to / open specific sections from a click next to that setting in the admin GUI. Then we can run this through the upcoming lang_translate() function as well.


END OF ADMIN BUILDOUT NOTES

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


Look into adding the infrastructure for "chrome push alerts".


For mobile templates, we are completely ditching the desktop layout, for a design similar to mobile app portfolio tracking layouts. Hopefully we can still do sorting by marketcap, held amount, most volume, etc, AND add in sorting by gain / loss (which may also be useful in the desktop layout).


Create mobile devices templates, have the portfolio data rows show each piece of data on its own line the entire width of the screen (like android asset trackers do). We may need to create header / footer for mobile as well.


Wrap all interface English within a "placeholder" lang_translate() function call. Then from a developer perspective you can still fully see the interface logic, and build out translation logic over time later. 


Add Google or Microsoft translate API as options to translate the english defaults.


For the language translation cache (to avoid asking API for a translation if we already did once), include a hash digest of the original English text used to translate. That way if the hash changes for the current English text used (English is never translated as it's the default), we know we need to re-translate with a fresh API call (instead of using cached data), and also save the new hash digest of the current English text as well.


Simple trading bot, to run as a cron plugin (with web UI for configuration / stats / etc)


Look into merging all our classes in the portfolio app like so: https://stackoverflow.com/questions/2374828/how-to-merge-two-class-in-php  Then it is more programmer-friendly, as all functions can then be called from something like $ct->my_object() for simplicity sake.


MAY BE A GOOD WAY TO RE-RUN init.php IF USER CORRUPTS config.php (#AFTER# backing up / overwriting the corrupt config.php with /templates/back-end/main-config.template):
https://stackoverflow.com/questions/17160851/is-there-any-way-to-skip-fatal-error-from-include-file-in-php
https://www.php.net/manual/en/function.register-shutdown-function.php


Breakup numerous function call parameters for calls like ui_asset_row() into a param array, like we did for update_all_cookies(). Also do line breaks like we do for arrays on any large string inputs into function calls, like we did for log().


Consolidate CSV import / post data importing that are near the top of the update and portfolio page UI rendering files, into just one subroutine BEFORE the UI is rendered...like we ALREADY DID for cookie data in those sections.


Consider adding some SPECIFIC filenames that are sensitive data to obfusc_path_data() via the $file = basename($path) method. Not sure if needed for log security, BUT right now obfusc_path_data() DOES #NOT# OBFUSCATE THE FILENAME AT ALL (just path up to the file).


Add a check (every X days with a config setting), to see if a market's trade value has NOT changed in a long time (assure accuracy with resetting a 'no_change' count [store delimited with market value] if change is detected). Add an alert threshold config setting (after no change has been detected X times), which sends comms alerts if the threshold has been met. This way end users can be informed if a market seems to have stale trade values from lack of trades / taken offline. HAVE THIS HAPPEN IN THE BACKGROUND #ONLY WHEN LIVE DATA IS FETCHED# WITHIN $ct_cache->ext_data(), VIA USER-INRTERACTION OR A BACKGROUND TASK (DOES NOT CHECK MARKETS THAT ARE NOT USED BY END USERS OR THE BACKGROUND TASKS).


Have the light chart function create a cached var array in json (in cache/vars/ folder), and everytime a new chart system uses it, add it's BASE cache path as an array value. Then we just need to feed this array into a light charts reset function / logic that resets all KNOWN chart systems in the app that use the light charts system (including plugins)


Add logic to offer securing the computer in the auto-install. Add subsections "Requiring Password For Sudo (Admin)" / "Disabling Bluetooth" / "Enabling firewall" inside a main prompt "Would you like to secure your computer against hacks?" For the bluetooth disabling section, include a commented section so we know if we've already APPENDED (>> IN BASH, NOT >) to boot/config.txt (like we do for htaccess). For firewall setup add a loop that you add new ports to open and quit the loop when finished...AND AUTOMATICALLY OPEN PORTS 80 / 443 FOR THIS APP, AND SSH STUFF TOO IF DETECTED AS INSTALLED ON THE SYSTEM!


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
MAYBE SECTION
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


Some of our extra security automation options in FOLIO-INSTALL.bash may also be appropriate for my other auto-installer scripts (ticker / Bluetooth radio)?


Look into X day moving average overlay for price charts.


In debug mode, maybe add our new 'used ram' stat instead (that doesn't include buffers / cached ram).


Make default btc exchange in config.php optional, and auto-configure if invalid or left blank, based off the default primary currency setting (still log errors though). Additionally, consider defaulting to USD if the primary currency setting is invalid / blank as well (as long as we also error log any detected issues there too)??


SQL-based accounts for storing configuration settings per-user (including setting up new assets available at supported exchanges), BUT !NEVER! STORES PORTFOLIO DATA (FOR PRIVACY / SECURITY-SAKE).


Convert all long hand javascript to jquery?


Maybe add feature to auto-detect new / removed markets?


Alerts if NOT admin ip address visiting (admin ip stored in config setting)?


############################################################################################################################
############################################################################################################################



